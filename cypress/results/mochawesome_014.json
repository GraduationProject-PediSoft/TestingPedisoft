{
  "stats": {
    "suites": 5,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-02T07:19:54.114Z",
    "end": "2023-11-02T07:20:29.288Z",
    "duration": 35174,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8759e55d-b0da-452d-9358-42582ca6b3c5",
      "title": "",
      "fullFile": "cypress\\e2e\\spec10_TestUserRegister.cy.js",
      "file": "cypress\\e2e\\spec10_TestUserRegister.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b565ea0a-3bab-4934-a26c-b7e601922c0d",
          "title": "All Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visits the site and changes the browser size",
              "fullTitle": "All Tests Visits the site and changes the browser size",
              "timedOut": null,
              "duration": 2438,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Define an array of viewport sizes\nconst viewportSizes = [[550, 750], [768, 1024], 'iphone-6', 'ipad-2', [1000, 660],\n// Default viewport size\n[1500, 660]\n// Add more viewport sizes as needed\n];\n// Loop through the viewport sizes\nviewportSizes.forEach(size => {\n  // Check if the size is an array (width and height)\n  if (Array.isArray(size)) {\n    const [width, height] = size;\n    cy.viewport(width, height);\n  } else {\n    // Use a preset string\n    cy.viewport(size);\n  }\n  cy.wait(100);\n  // Perform assertions or actions related to the viewport size if necessary\n  // Customize these assertions as needed\n  cy.get('body').should('have.css', 'width');\n  cy.get('body').should('have.css', 'height');\n});",
              "err": {},
              "uuid": "b5213062-0beb-4dae-910c-c8b96c80e5f2",
              "parentUUID": "b565ea0a-3bab-4934-a26c-b7e601922c0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logs in and checks elements on the home page",
              "fullTitle": "All Tests Logs in and checks elements on the home page",
              "timedOut": null,
              "duration": 4273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Assertions after logging in\n// Verify that certain elements are present or have specific text\n// Examples:\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home');\n// Add more assertions as needed",
              "err": {},
              "uuid": "f0b7eb1f-14da-4c87-aca3-3da2ef7918f5",
              "parentUUID": "b565ea0a-3bab-4934-a26c-b7e601922c0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logs in and checks for component change",
              "fullTitle": "All Tests Logs in and checks for component change",
              "timedOut": null,
              "duration": 1045,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Assertions after logging in\n// Verify that certain elements are present and have specific text\ncy.get('body > app-root > app-home > div > app-header > nav > div > a > img').should('be.visible');\ncy.get('body > app-root > app-home > div > app-header > nav > div > a > span').should('be.visible').and('have.text', 'Pedisoft');\ncy.get('span.font-bold.text-lg').should('be.visible').and('have.text', 'Informaci√≥n');\ncy.get('.c-wrapper .nav-item[href=\"https://github.com/GraduationProject-PediSoft\"]').should('be.visible');\ncy.get('a[routerlink=\"help\"]').contains('Ayuda').should('be.visible');",
              "err": {},
              "uuid": "579a802e-fc6f-431a-b1d1-2e4048147fd1",
              "parentUUID": "b565ea0a-3bab-4934-a26c-b7e601922c0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logs in and checks the sequence of steps in the Service component",
              "fullTitle": "All Tests Logs in and checks the sequence of steps in the Service component",
              "timedOut": null,
              "duration": 1156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Service component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Verify the presence of each <li> element in the list\ncy.get('ul[role=\"tablist\"] li[role=\"presentation\"]').should('have.length', 4);\n// Evaluate the presence of each <li> element individually\ncy.get('ul[role=\"tablist\"] li[role=\"presentation\"]').each(($li, index) => {\n  // Verify that the <li> element is visible\n  cy.wrap($li).should('be.visible');\n  // Evaluate other attributes or content of the <li> element if necessary\n  if (index === 0) {\n    // Verify specific properties for the first element\n  } else {\n    // Verify different properties for the other elements\n  }\n});\n// Verify that the first element in the list is clickable\ncy.get('ul[role=\"tablist\"] li[role=\"presentation\"]').eq(0).find('a[tabindex=\"0\"]').should('be.visible');\n// Verify that the other elements are not clickable\ncy.get('ul[role=\"tablist\"] li[role=\"presentation\"]').eq(1).find('a[tabindex=\"-1\"]').should('be.visible');\ncy.get('ul[role=\"tablist\"] li[role=\"presentation\"]').eq(2).find('a[tabindex=\"-1\"]').should('be.visible');\ncy.get('ul[role=\"tablist\"] li[role=\"presentation\"]').eq(3).find('a[tabindex=\"-1\"]').should('be.visible');",
              "err": {},
              "uuid": "c76664ee-09f2-41ce-b492-9b14db201690",
              "parentUUID": "b565ea0a-3bab-4934-a26c-b7e601922c0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login, Delete User, Create User, and Logout",
              "fullTitle": "All Tests Login, Delete User, Create User, and Logout",
              "timedOut": null,
              "duration": 6359,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Users component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/users\"]').click();\n// Click the button for user deletion\ncy.get('#pn_id_11_header_action > span').click();\n// Fill in the \"Username\" field or any other necessary field to identify the user to delete\ncy.get('input#username').eq(1).type('testUser');\n// Click the \"Submit\" button to delete the user\ncy.get('#pn_id_11_content > app-delete-user > form > p-button > button > span').click();\n// Click the button for creating a new user\ncy.get('#pn_id_10_header_action > span').click();\n// Wait for 100 milliseconds (customize as needed)\ncy.wait(100);\n// Fill in the \"Username\" field\ncy.get('input#username').eq(0).type('testUser');\n// Fill in the \"Password\" field\ncy.get('#password > div > input').type('password');\n// Fill in the \"Email\" field\ncy.get('input#email').type('test@example.com');\n// Click the \"Submit\" button\ncy.get('button[type=\"submit\"]').eq(0).click();\n// Click the \"Logout\" button\ncy.get('li:nth-child(5) > p-button > button > span').eq(0).click();",
              "err": {},
              "uuid": "3150924b-8e9f-4b78-a1c7-e6689c6074d2",
              "parentUUID": "b565ea0a-3bab-4934-a26c-b7e601922c0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "6edf9cf9-5e07-4b1b-a64c-1747938fdcca",
              "title": "Verify Service Information Retrieval",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in and checks service information retrieval",
                  "fullTitle": "All Tests Verify Service Information Retrieval Logs in and checks service information retrieval",
                  "timedOut": null,
                  "duration": 1767,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Service component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for service selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize this as needed)\ncy.wait(100);\n// Verify the visibility of a button and click it\ncy.get('form > p-button > button > span').should('be.visible').click();",
                  "err": {},
                  "uuid": "2ddd7cb0-1778-4bee-9c4a-80eb3e81f260",
                  "parentUUID": "6edf9cf9-5e07-4b1b-a64c-1747938fdcca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ddd7cb0-1778-4bee-9c4a-80eb3e81f260"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1767,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e803aed3-1ccd-47a4-ae2d-4000297a54ca",
              "title": "Verify Algorithm Selection and Service Form Submission",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in and checks algorithm selection and service form submission",
                  "fullTitle": "All Tests Verify Algorithm Selection and Service Form Submission Logs in and checks algorithm selection and service form submission",
                  "timedOut": null,
                  "duration": 2001,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize this as needed)\ncy.wait(100);\n// Verify the visibility of a button and click it\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of <li> elements\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  // Generate a random index between 0 and the number of elements - 1\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  // Select the random element by clicking on it\n  cy.wrap($options[randomIndex]).click();\n});\n// Verify the visibility of a button and click it\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();",
                  "err": {},
                  "uuid": "69edca30-57b8-4741-a7b4-d213c20c4586",
                  "parentUUID": "e803aed3-1ccd-47a4-ae2d-4000297a54ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69edca30-57b8-4741-a7b4-d213c20c4586"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2001,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f8531097-506d-4575-bb86-f9061a4a27b0",
              "title": "Verify Form Field Functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in and checks form field functionality",
                  "fullTitle": "All Tests Verify Form Field Functionality Logs in and checks form field functionality",
                  "timedOut": null,
                  "duration": 1829,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize this as needed)\ncy.wait(100);\n// Click a button\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of elements <li>\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  cy.wrap($options[randomIndex]).click();\n});\n// Click a button\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();\n// Find and interact with all non-readonly input elements\ncy.get('input').not('[readonly]').each($input => {\n  // Get the input type\n  const inputType = $input.attr('type');\n  try {\n    switch (inputType) {\n      case 'text':\n        cy.wrap($input).type('1');\n        break;\n      case 'number':\n        cy.wrap($input).type('1');\n        break;\n      // Add more cases for other input types as needed\n      default:\n        // If no specific input type is found, fill with a default value\n        break;\n    }\n  } catch (error) {\n    // Handle any errors that may occur here, e.g., print them to the console\n    console.error('Error filling the input:', error.message);\n  }\n});",
                  "err": {},
                  "uuid": "cd33debc-e8af-4497-a027-a5bfe3530f66",
                  "parentUUID": "f8531097-506d-4575-bb86-f9061a4a27b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd33debc-e8af-4497-a027-a5bfe3530f66"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1829,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3f8e1182-f627-44af-a044-1d8011f78e95",
              "title": "Test Repeating Scenario: Verify Data Submission, Image + Form",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Execution 1: Verify Data Submission, Image + Form",
                  "fullTitle": "All Tests Test Repeating Scenario: Verify Data Submission, Image + Form Execution 1: Verify Data Submission, Image + Form",
                  "timedOut": null,
                  "duration": 2286,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  // Verify if there are <p> elements in the dropdown\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize as needed)\ncy.wait(100);\n// Click a button\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of elements <li>\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  // Get a random index between 0 and the number of elements - 1\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  // Select the random element by clicking on it\n  cy.wrap($options[randomIndex]).click();\n});\n// Click a button\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();\n// Find and interact with all non-readonly input elements\ncy.get('input').not('[readonly]').each($input => {\n  // Get the input type\n  const inputType = $input.attr('type');\n  try {\n    switch (inputType) {\n      case 'text':\n        cy.wrap($input).type('high');\n        break;\n      case 'number':\n        cy.wrap($input).type(1);\n        break;\n      // Add more cases for other input types as needed\n      default:\n        // If no specific input type is found, fill with a default value\n        break;\n    }\n  } catch (error) {\n    // Handle any errors that may occur here, e.g., print them to the console\n    console.error('Error filling the input:', error.message);\n  }\n});\n// Verify that the element is visible and click on it\ncy.get('#pn_id_13_content > app-algorithm-form > form > div > app-algorithm-form-tag > div > p-fileupload > div > span > span').should('be.visible').click();\n// Select a simulated file\ncy.get(\"[type='file']\").selectFile({\n  contents: 'cypress/fixtures/image.dicom',\n  fileName: 'image.dicom',\n  mimeType: 'application/dicom',\n  lastModified: Date.now()\n}, {\n  force: true\n});\n// Click a button\ncy.get('#pn_id_13_content app-algorithm-form form p-button button span').click();",
                  "err": {},
                  "uuid": "a67dcd70-b29d-440d-a1c6-446802524b24",
                  "parentUUID": "3f8e1182-f627-44af-a044-1d8011f78e95",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Execution 2: Verify Data Submission, Image + Form",
                  "fullTitle": "All Tests Test Repeating Scenario: Verify Data Submission, Image + Form Execution 2: Verify Data Submission, Image + Form",
                  "timedOut": null,
                  "duration": 2518,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  // Verify if there are <p> elements in the dropdown\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize as needed)\ncy.wait(100);\n// Click a button\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of elements <li>\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  // Get a random index between 0 and the number of elements - 1\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  // Select the random element by clicking on it\n  cy.wrap($options[randomIndex]).click();\n});\n// Click a button\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();\n// Find and interact with all non-readonly input elements\ncy.get('input').not('[readonly]').each($input => {\n  // Get the input type\n  const inputType = $input.attr('type');\n  try {\n    switch (inputType) {\n      case 'text':\n        cy.wrap($input).type('high');\n        break;\n      case 'number':\n        cy.wrap($input).type(1);\n        break;\n      // Add more cases for other input types as needed\n      default:\n        // If no specific input type is found, fill with a default value\n        break;\n    }\n  } catch (error) {\n    // Handle any errors that may occur here, e.g., print them to the console\n    console.error('Error filling the input:', error.message);\n  }\n});\n// Verify that the element is visible and click on it\ncy.get('#pn_id_13_content > app-algorithm-form > form > div > app-algorithm-form-tag > div > p-fileupload > div > span > span').should('be.visible').click();\n// Select a simulated file\ncy.get(\"[type='file']\").selectFile({\n  contents: 'cypress/fixtures/image.dicom',\n  fileName: 'image.dicom',\n  mimeType: 'application/dicom',\n  lastModified: Date.now()\n}, {\n  force: true\n});\n// Click a button\ncy.get('#pn_id_13_content app-algorithm-form form p-button button span').click();",
                  "err": {},
                  "uuid": "1061c24b-56a5-481b-b792-54e1792ad91c",
                  "parentUUID": "3f8e1182-f627-44af-a044-1d8011f78e95",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Execution 3: Verify Data Submission, Image + Form",
                  "fullTitle": "All Tests Test Repeating Scenario: Verify Data Submission, Image + Form Execution 3: Verify Data Submission, Image + Form",
                  "timedOut": null,
                  "duration": 2321,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  // Verify if there are <p> elements in the dropdown\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize as needed)\ncy.wait(100);\n// Click a button\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of elements <li>\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  // Get a random index between 0 and the number of elements - 1\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  // Select the random element by clicking on it\n  cy.wrap($options[randomIndex]).click();\n});\n// Click a button\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();\n// Find and interact with all non-readonly input elements\ncy.get('input').not('[readonly]').each($input => {\n  // Get the input type\n  const inputType = $input.attr('type');\n  try {\n    switch (inputType) {\n      case 'text':\n        cy.wrap($input).type('high');\n        break;\n      case 'number':\n        cy.wrap($input).type(1);\n        break;\n      // Add more cases for other input types as needed\n      default:\n        // If no specific input type is found, fill with a default value\n        break;\n    }\n  } catch (error) {\n    // Handle any errors that may occur here, e.g., print them to the console\n    console.error('Error filling the input:', error.message);\n  }\n});\n// Verify that the element is visible and click on it\ncy.get('#pn_id_13_content > app-algorithm-form > form > div > app-algorithm-form-tag > div > p-fileupload > div > span > span').should('be.visible').click();\n// Select a simulated file\ncy.get(\"[type='file']\").selectFile({\n  contents: 'cypress/fixtures/image.dicom',\n  fileName: 'image.dicom',\n  mimeType: 'application/dicom',\n  lastModified: Date.now()\n}, {\n  force: true\n});\n// Click a button\ncy.get('#pn_id_13_content app-algorithm-form form p-button button span').click();",
                  "err": {},
                  "uuid": "ef4eaef5-d23e-412c-863f-27e874a9feb7",
                  "parentUUID": "3f8e1182-f627-44af-a044-1d8011f78e95",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Execution 4: Verify Data Submission, Image + Form",
                  "fullTitle": "All Tests Test Repeating Scenario: Verify Data Submission, Image + Form Execution 4: Verify Data Submission, Image + Form",
                  "timedOut": null,
                  "duration": 2371,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  // Verify if there are <p> elements in the dropdown\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize as needed)\ncy.wait(100);\n// Click a button\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of elements <li>\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  // Get a random index between 0 and the number of elements - 1\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  // Select the random element by clicking on it\n  cy.wrap($options[randomIndex]).click();\n});\n// Click a button\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();\n// Find and interact with all non-readonly input elements\ncy.get('input').not('[readonly]').each($input => {\n  // Get the input type\n  const inputType = $input.attr('type');\n  try {\n    switch (inputType) {\n      case 'text':\n        cy.wrap($input).type('high');\n        break;\n      case 'number':\n        cy.wrap($input).type(1);\n        break;\n      // Add more cases for other input types as needed\n      default:\n        // If no specific input type is found, fill with a default value\n        break;\n    }\n  } catch (error) {\n    // Handle any errors that may occur here, e.g., print them to the console\n    console.error('Error filling the input:', error.message);\n  }\n});\n// Verify that the element is visible and click on it\ncy.get('#pn_id_13_content > app-algorithm-form > form > div > app-algorithm-form-tag > div > p-fileupload > div > span > span').should('be.visible').click();\n// Select a simulated file\ncy.get(\"[type='file']\").selectFile({\n  contents: 'cypress/fixtures/image.dicom',\n  fileName: 'image.dicom',\n  mimeType: 'application/dicom',\n  lastModified: Date.now()\n}, {\n  force: true\n});\n// Click a button\ncy.get('#pn_id_13_content app-algorithm-form form p-button button span').click();",
                  "err": {},
                  "uuid": "a2d99159-1100-47c1-ab30-ae49df25d6af",
                  "parentUUID": "3f8e1182-f627-44af-a044-1d8011f78e95",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Execution 5: Verify Data Submission, Image + Form",
                  "fullTitle": "All Tests Test Repeating Scenario: Verify Data Submission, Image + Form Execution 5: Verify Data Submission, Image + Form",
                  "timedOut": null,
                  "duration": 2185,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Visit the website\ncy.visit('http://tesis.10.43.101.226.nip.io');\n// Fill in the username field\ncy.get('input[formcontrolname=\"username\"]').type('test');\n// Fill in the password field\ncy.get('input[type=\"password\"]').type('1234');\n// Click the \"Sign In\" button\ncy.get('button[type=\"submit\"]').click();\n// Navigate to the Algorithm component\ncy.get('a[routerlinkactive=\"nav-item-selected\"][href=\"/home/algorithm\"]').click();\n// Verify the URL\ncy.url().should('eq', 'http://tesis.10.43.101.226.nip.io/home/algorithm');\n// Click the dropdown for algorithm selection\ncy.get('#pn_id_10_content form div p-dropdown div span').click();\n// Check if there are <p> elements within the dropdown list\ncy.get('#pn_id_11_list .p-dropdown-item').find('span').then($elements => {\n  // Verify if there are <p> elements in the dropdown\n  if ($elements.length > 0) {\n    // Generate a random index\n    const randomIndex = Math.floor(Math.random() * $elements.length);\n    // Click on a random <p> element\n    cy.wrap($elements[randomIndex]).click();\n  }\n  // If there are no <p> elements, no action will be performed\n});\n// Wait for 100 milliseconds (customize as needed)\ncy.wait(100);\n// Click a button\ncy.get('form > p-button > button > span').should('be.visible').click();\n// Click the dropdown for service form submission\ncy.get('#pn_id_12_content > form p-dropdown div span').click();\n// Get the list of elements <li>\ncy.get('#pn_id_16_list li[role=\"option\"]').then($options => {\n  // Get a random index between 0 and the number of elements - 1\n  const randomIndex = Cypress._.random(0, $options.length - 1);\n  // Select the random element by clicking on it\n  cy.wrap($options[randomIndex]).click();\n});\n// Click a button\ncy.get('#pn_id_12_content > form > p-button > button > span').should('be.visible').click();\n// Find and interact with all non-readonly input elements\ncy.get('input').not('[readonly]').each($input => {\n  // Get the input type\n  const inputType = $input.attr('type');\n  try {\n    switch (inputType) {\n      case 'text':\n        cy.wrap($input).type('high');\n        break;\n      case 'number':\n        cy.wrap($input).type(1);\n        break;\n      // Add more cases for other input types as needed\n      default:\n        // If no specific input type is found, fill with a default value\n        break;\n    }\n  } catch (error) {\n    // Handle any errors that may occur here, e.g., print them to the console\n    console.error('Error filling the input:', error.message);\n  }\n});\n// Verify that the element is visible and click on it\ncy.get('#pn_id_13_content > app-algorithm-form > form > div > app-algorithm-form-tag > div > p-fileupload > div > span > span').should('be.visible').click();\n// Select a simulated file\ncy.get(\"[type='file']\").selectFile({\n  contents: 'cypress/fixtures/image.dicom',\n  fileName: 'image.dicom',\n  mimeType: 'application/dicom',\n  lastModified: Date.now()\n}, {\n  force: true\n});\n// Click a button\ncy.get('#pn_id_13_content app-algorithm-form form p-button button span').click();",
                  "err": {},
                  "uuid": "5813e277-bb25-4c2f-9728-28d1b71ce70d",
                  "parentUUID": "3f8e1182-f627-44af-a044-1d8011f78e95",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a67dcd70-b29d-440d-a1c6-446802524b24",
                "1061c24b-56a5-481b-b792-54e1792ad91c",
                "ef4eaef5-d23e-412c-863f-27e874a9feb7",
                "a2d99159-1100-47c1-ab30-ae49df25d6af",
                "5813e277-bb25-4c2f-9728-28d1b71ce70d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11681,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b5213062-0beb-4dae-910c-c8b96c80e5f2",
            "f0b7eb1f-14da-4c87-aca3-3da2ef7918f5",
            "579a802e-fc6f-431a-b1d1-2e4048147fd1",
            "c76664ee-09f2-41ce-b492-9b14db201690",
            "3150924b-8e9f-4b78-a1c7-e6689c6074d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15271,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}